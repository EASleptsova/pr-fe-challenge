[{"/home/dhalion-linux/Development/mui-admin-example-main/src/index.js":"1","/home/dhalion-linux/Development/mui-admin-example-main/src/pages/Employees/EmployeeForm.js":"2","/home/dhalion-linux/Development/mui-admin-example-main/src/components/useForm.js":"3","/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/Input.js":"4","/home/dhalion-linux/Development/mui-admin-example-main/src/components/ConfirmDialog.js":"5","/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/DatePicker.js":"6","/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/RadioGroup.js":"7","/home/dhalion-linux/Development/mui-admin-example-main/src/App/App.js":"8","/home/dhalion-linux/Development/mui-admin-example-main/src/components/SideMenu.js":"9","/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/Select.js":"10","/home/dhalion-linux/Development/mui-admin-example-main/src/utils/seed.js":"11","/home/dhalion-linux/Development/mui-admin-example-main/src/services/employeeService.js":"12","/home/dhalion-linux/Development/mui-admin-example-main/src/pages/Employees/Employees.js":"13"},{"size":461,"mtime":1610248763000,"results":"14","hashOfConfig":"15"},{"size":3798,"mtime":1610248763000,"results":"16","hashOfConfig":"15"},{"size":1037,"mtime":1610248763000,"results":"17","hashOfConfig":"15"},{"size":458,"mtime":1610248763000,"results":"18","hashOfConfig":"15"},{"size":2198,"mtime":1610248763000,"results":"19","hashOfConfig":"15"},{"size":753,"mtime":1610248763000,"results":"20","hashOfConfig":"15"},{"size":643,"mtime":1610248763000,"results":"21","hashOfConfig":"15"},{"size":1133,"mtime":1639596890408,"results":"22","hashOfConfig":"15"},{"size":456,"mtime":1610248763000,"results":"23","hashOfConfig":"15"},{"size":742,"mtime":1610248763000,"results":"24","hashOfConfig":"15"},{"size":1235,"mtime":1639619372957,"results":"25","hashOfConfig":"15"},{"size":1458,"mtime":1639618307816,"results":"26","hashOfConfig":"15"},{"size":6004,"mtime":1639620045332,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1p1wuo2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dhalion-linux/Development/mui-admin-example-main/src/index.js",[],["56","57"],"/home/dhalion-linux/Development/mui-admin-example-main/src/pages/Employees/EmployeeForm.js",["58"],"import React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from '../../components/controls/Controls';\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from '../../services/employeeService';\n\nconst genderItems = [\n  { id: 'male', title: 'Male' },\n  { id: 'female', title: 'Female' },\n  { id: 'other', title: 'Other' },\n];\n\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false,\n};\n\nexport default function EmployeeForm(props) {\n  const { addOrEdit, recordForEdit } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('fullName' in fieldValues)\n      temp.fullName = fieldValues.fullName ? '' : 'This field is required.';\n    if ('email' in fieldValues)\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n        ? ''\n        : 'Email is not valid.';\n    if ('mobile' in fieldValues)\n      temp.mobile =\n        fieldValues.mobile.length > 9 ? '' : 'Minimum 10 numbers required.';\n    if ('departmentId' in fieldValues)\n      temp.departmentId =\n        fieldValues.departmentId.length !== 0 ? '' : 'This field is required.';\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues === values) return Object.values(temp).every((x) => x === '');\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm,\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null)\n      setValues({\n        ...recordForEdit,\n      });\n  }, [recordForEdit]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name='fullName'\n            label='Full Name'\n            value={values.fullName}\n            onChange={handleInputChange}\n            error={errors.fullName}\n          />\n          <Controls.Input\n            label='Email'\n            name='email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            label='Mobile'\n            name='mobile'\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.Input\n            label='City'\n            name='city'\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.RadioGroup\n            name='gender'\n            label='Gender'\n            value={values.gender}\n            onChange={handleInputChange}\n            items={genderItems}\n          />\n          <Controls.Select\n            name='departmentId'\n            label='Department'\n            value={values.departmentId}\n            onChange={handleInputChange}\n            options={employeeService.getDepartmentCollection()}\n            error={errors.departmentId}\n          />\n          <Controls.DatePicker\n            name='hireDate'\n            label='Hire Date'\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.Checkbox\n            name='isPermanent'\n            label='Permanent Employee'\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <Controls.Button type='submit' text='Submit' />\n            <Controls.Button text='Reset' color='default' onClick={resetForm} />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n","/home/dhalion-linux/Development/mui-admin-example-main/src/components/useForm.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/Input.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/ConfirmDialog.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/DatePicker.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/RadioGroup.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/App/App.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/SideMenu.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/components/controls/Select.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/utils/seed.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/services/employeeService.js",[],"/home/dhalion-linux/Development/mui-admin-example-main/src/pages/Employees/Employees.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":70,"column":6,"nodeType":"65","endLine":70,"endColumn":21,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"72","text":"73"},[1784,1799],"[recordForEdit, setValues]"]